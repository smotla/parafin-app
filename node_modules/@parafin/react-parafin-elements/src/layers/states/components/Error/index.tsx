import React from 'react'
import { hexToRGBA } from 'utils'
import { Style } from 'types'


type TextProps = {
  color: string
  bold?: boolean
  children: React.ReactNode
}
const Text = ({ color, bold = false, children }: TextProps) => (
  <p
    style={{
      fontSize: '14px',
      lineHeight: '20px',
      fontWeight: bold ? 700 : 400,
      margin: '0',
      color: color
    }}
  >
    {children}
  </p>
)


type Props = {
  style: Partial<Style>
}
const DefaultError = ({ style }: Props) => {
  const titleColor = style.primary ?? '#191919'
  const descriptionColor = style.secondary ?? '#494949'
  const borderRadius = style.borderRadius ?? '4px'

  return (
    <div style={{
      background: 'white',
      padding: '16px',
      borderRadius,
      border: `1px solid ${style.borderColor ?? '#e7e7e7'}`,
    }}>
      <Text color={titleColor} bold>
        Something went wrong.
      </Text>
      <div style={{ height: '4px' }} />
      <Text color={descriptionColor}>
        Please refresh and try again.
      </Text>
    </div>
  )
}

const ButtonError = ({ style }: Props) => {
  return (
    <div style={{display: 'flex', justifyContent: 'center'}}>
      <button
        style={{
          background: hexToRGBA(style.variants?.button?.background ?? '#797979', 0.5),
          color: style.variants?.button?.color ?? '#fff',
          fontSize: style.variants?.button?.fontSize ?? '14px',
          borderRadius: style.variants?.button?.borderRadius ?? '8px',
          minHeight: style.variants?.button?.height ?? '40px',
          cursor: 'not-allowed',
          width: 'fit-content',
          padding: '0 24px',
          border: 'none',
          transition: '0.2s',
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          textShadow: 'none',
          fontFamily: 'inherit',
          fontWeight: 600,
        }}
        disabled
      >
        Unexpected error
      </button>
    </div>
  )
}


type ErrorProps = {
  variant: string
  style: Partial<Style>
}
const Error = ({ variant, style }: ErrorProps) => {
  switch (variant) {
    case 'button': return <ButtonError style={style} />
    default: return <DefaultError style={style} />
  }
}

export default Error
