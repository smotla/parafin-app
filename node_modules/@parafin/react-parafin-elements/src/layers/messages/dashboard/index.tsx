import React, { useEffect } from 'react'
import { useEntryLayerContext } from 'layers/entry'
import { useProductLayerContext } from 'layers/product'
import { useDashboardLayerContext } from 'layers/dashboard'
import { useCommsLayerContext } from 'layers/comms'


type Children = { children: React.ReactNode }
const DashboardMessages = ({ children }: Children) => {
  const { onExit, onExitV2 } = useEntryLayerContext()
  const { dashboardURL, widgetURL } = useProductLayerContext()
  const { openDashboard, closeDashboard } = useDashboardLayerContext()
  const { registerMessageHandler, deregisterMessageHandler } = useCommsLayerContext()

  useEffect(() => {
    registerMessageHandler(
      { origin: dashboardURL, message: 'exit' },
      (data: any) => {
        onExit(data.status)
        onExitV2({
          states:
            typeof data?.status === 'string'
              ? [data?.status]
              : data?.status?.map((s: any) => s.state)
        })
        closeDashboard(data.state)
      }
    )

    registerMessageHandler(
      { origin: widgetURL, message: 'expand' },
      (data: any) => {
        // TODO: Allow opening of specific dashboard from this message
        openDashboard(data.route, data.state)
      }
    )

    return () => {
      deregisterMessageHandler({
        origin: dashboardURL,
        message: 'exit'
      })
      deregisterMessageHandler({ origin: widgetURL, message: 'expand' })
    }
  }, [
    registerMessageHandler,
    deregisterMessageHandler,
    widgetURL,
    dashboardURL,
    openDashboard,
    closeDashboard,
    onExit,
    onExitV2
  ])

  return (
    <>
      {children}
    </>
  )
}

export default DashboardMessages
