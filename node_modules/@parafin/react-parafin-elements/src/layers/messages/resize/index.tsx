import React, { useState, useEffect } from 'react'
import { useEntryLayerContext } from 'layers/entry'
import { useAnalyticsLayerContext } from 'layers/analytics'
import { useProductLayerContext } from 'layers/product'
import { useCommsLayerContext } from 'layers/comms'


type Children = { children: React.ReactNode }
const ResizeMessages = ({ children }: Children) => {
  const { style, variant } = useEntryLayerContext()
  const { report } = useAnalyticsLayerContext()
  const { widgetURL } = useProductLayerContext()
  const { registerMessageHandler, deregisterMessageHandler } = useCommsLayerContext()

  const [height, setHeight] = useState(() => {
    switch (variant) {
      case 'button': return style.variants?.button?.height ?? '40px'
      default: return '200px'
    }
  })

  useEffect(() => {
    registerMessageHandler(
      { origin: widgetURL, message: 'request-height' },
      (data: any) => {
        try {
          if (data.height) {
            setHeight(data.height)
          } else {
            report('[Resize] Invalid message', { message: data })
          }
        } catch (err: any) {
          report(`[Resize] ${err?.message ?? 'Unknown error'}`)
        }
      }
    )

    return () => {
      deregisterMessageHandler({
        origin: widgetURL,
        message: 'request-height'
      })
    }
  }, [
    widgetURL,
    registerMessageHandler,
    deregisterMessageHandler,
    report
  ])


  return (
    <div style={{ height, boxSizing: 'border-box' }}>
      {children}
    </div>
  )
}

export default ResizeMessages
