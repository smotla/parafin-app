{"ast":null,"code":"var _jsxFileName = \"/Users/Santhosh/Documents/santhosh_documents /Parafin/parafin-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ParafinElements } from \"@parafin/react-parafin-elements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    const fetchToken = async () => {\n      // Replace with your own Person ID\n      const personId = \"person_f27ccf05-aada-4348-bbcb-11ca672a8b59\";\n\n      // Fetch Parafin bearer token from server\n      const response = await axios.get(`https://api.parafin.com/v1/auth/redeem_token/${personId}`);\n      setToken(response.data.parafinToken);\n    };\n    if (!token) {\n      fetchToken();\n    }\n  }, [token]); // Add token as a dependency to avoid infinite loop\n\n  return token &&\n  /*#__PURE__*/\n  // Use parentheses instead of curly braces\n  _jsxDEV(ParafinElements, {\n    product: \"capital\",\n    environment: \"development\",\n    token: token\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"SSLzquenZQzOMzU62DrezfOo2pU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ParafinElements","jsxDEV","_jsxDEV","App","_s","token","setToken","fetchToken","personId","response","get","data","parafinToken","product","environment","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Santhosh/Documents/santhosh_documents /Parafin/parafin-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ParafinElements } from \"@parafin/react-parafin-elements\";\n\nconst App = () => {\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    const fetchToken = async () => {      \n      // Replace with your own Person ID\n      const personId = \"person_f27ccf05-aada-4348-bbcb-11ca672a8b59\";\n\n      // Fetch Parafin bearer token from server\n      const response = await axios.get(`https://api.parafin.com/v1/auth/redeem_token/${personId}`);\n\n      setToken(response.data.parafinToken);\n    };\n\n    if (!token) {\n      fetchToken();\n    }    \n  }, [token]); // Add token as a dependency to avoid infinite loop\n\n  return (\n    token && ( // Use parentheses instead of curly braces\n      <ParafinElements\n        product=\"capital\"\n        environment=\"development\"\n        token={token}        \n      />\n    )\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B;MACA,MAAMC,QAAQ,GAAG,6CAA6C;;MAE9D;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,gDAA+CF,QAAS,EAAC,CAAC;MAE5FF,QAAQ,CAACG,QAAQ,CAACE,IAAI,CAACC,YAAY,CAAC;IACtC,CAAC;IAED,IAAI,CAACP,KAAK,EAAE;MACVE,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,OACEA,KAAK;EAAA;EAAM;EACTH,OAAA,CAACF,eAAe;IACda,OAAO,EAAC,SAAS;IACjBC,WAAW,EAAC,aAAa;IACzBT,KAAK,EAAEA;EAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CACF;AAEL,CAAC;AAACd,EAAA,CA5BID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}