{"ast":null,"code":"var _jsxFileName = \"/Users/Santhosh/Documents/santhosh_documents /Parafin/parafin-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ParafinElements } from \"@parafin/react-parafin-elements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    const fetchToken = async () => {\n      // Replace with your own Person ID\n      const personId = \"person_f27ccf05-aada-4348-bbcb-11ca672a8b59\";\n      const url = 'https://api.parafin.com/v1/auth/redeem_token';\n      const clientId = 'e739d6c5-70ed-4ffd-9117-1ec7ad5f29f2';\n      const clientSecret = 'sandbox_WMheEpcCf6bfFkUXNBf8526SasjeHYEoYnKp62Y9I9L4Cb7Q3t2p5c87jyc2UxRO';\n      const request_body = {\n        \"person_id\": personId\n      };\n      const authPayload = {\n        ...request_body,\n        grant_type: 'client_credentials',\n        client_id: clientId,\n        client_secret: clientSecret\n      };\n\n      // Fetch Parafin bearer token from server\n      const response = await axios.post(url, authPayload, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setToken(response.data);\n    };\n    if (!token) {\n      fetchToken();\n    }\n  }, [token]); // Add token as a dependency to avoid infinite loop\n\n  return token &&\n  /*#__PURE__*/\n  // Use parentheses instead of curly braces\n  _jsxDEV(ParafinElements, {\n    product: \"capital\",\n    environment: \"development\",\n    token: token\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"SSLzquenZQzOMzU62DrezfOo2pU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ParafinElements","jsxDEV","_jsxDEV","App","_s","token","setToken","fetchToken","personId","url","clientId","clientSecret","request_body","authPayload","grant_type","client_id","client_secret","response","post","headers","data","product","environment","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Santhosh/Documents/santhosh_documents /Parafin/parafin-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ParafinElements } from \"@parafin/react-parafin-elements\";\n\nconst App = () => {\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    const fetchToken = async () => {      \n      // Replace with your own Person ID\n      const personId = \"person_f27ccf05-aada-4348-bbcb-11ca672a8b59\";\n      const url = 'https://api.parafin.com/v1/auth/redeem_token';\n      const clientId = 'e739d6c5-70ed-4ffd-9117-1ec7ad5f29f2';\n      const clientSecret = 'sandbox_WMheEpcCf6bfFkUXNBf8526SasjeHYEoYnKp62Y9I9L4Cb7Q3t2p5c87jyc2UxRO';\n\n      const request_body = {\n        \"person_id\": personId\n      };\n\n      const authPayload = {\n        ...request_body,\n        grant_type: 'client_credentials',\n        client_id: clientId,\n        client_secret: clientSecret,\n      };\n\n      // Fetch Parafin bearer token from server\n      const response = await axios.post(url, authPayload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      setToken(response.data);\n    };\n\n    if (!token) {\n      fetchToken();\n    }    \n  }, [token]); // Add token as a dependency to avoid infinite loop\n\n  return (\n    token && ( // Use parentheses instead of curly braces\n      <ParafinElements\n        product=\"capital\"\n        environment=\"development\"\n        token={token}        \n      />\n    )\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B;MACA,MAAMC,QAAQ,GAAG,6CAA6C;MAC9D,MAAMC,GAAG,GAAG,8CAA8C;MAC1D,MAAMC,QAAQ,GAAG,sCAAsC;MACvD,MAAMC,YAAY,GAAG,0EAA0E;MAE/F,MAAMC,YAAY,GAAG;QACnB,WAAW,EAAEJ;MACf,CAAC;MAED,MAAMK,WAAW,GAAG;QAClB,GAAGD,YAAY;QACfE,UAAU,EAAE,oBAAoB;QAChCC,SAAS,EAAEL,QAAQ;QACnBM,aAAa,EAAEL;MACjB,CAAC;;MAED;MACA,MAAMM,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAACT,GAAG,EAAEI,WAAW,EAAE;QAClDM,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFb,QAAQ,CAACW,QAAQ,CAACG,IAAI,CAAC;IACzB,CAAC;IAED,IAAI,CAACf,KAAK,EAAE;MACVE,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,OACEA,KAAK;EAAA;EAAM;EACTH,OAAA,CAACF,eAAe;IACdqB,OAAO,EAAC,SAAS;IACjBC,WAAW,EAAC,aAAa;IACzBjB,KAAK,EAAEA;EAAM;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CACF;AAEL,CAAC;AAACtB,EAAA,CA9CID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}